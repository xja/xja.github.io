[{"categories":["linux"],"content":"系统本身是正常的，在测试 rescue 环境的时候发现系统分区不能自动挂载 Rescue Shell You don't have any Linux partitions. When finished, please exit from the shell and your system will reboot. Please press ENTER to get a shell: sh-4.4# fdisk -l Disk /dev/sda: 20GiB, 21474836480 bytes, 41943040 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optiomal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0xd23696aa Device Boot Start End Sectors Size Id Type /dev/sda1 * 2048 2099199 2097152 1G 83 Linux /dev/sda2 2099200 41943039 39843840 19G 8e Linux LVM sh-4.4# mount /dev/sda2 /mnt/sysimage mount: /mnt/sysimage: unknown filesystem type 'LVM2_member'. sh-4.4# vgchange -ay 2 logical volumes(s) in volume group \"cs\" now active sh-4.4# lvscan ACTIVE '/dev/cs/swap' [2.00 GiG] inherit ACTIVE '/dev/cs/root' [\u003c17.00 GiG] inherit sh-4.4# mount /dev/cs/root /mnt/sysimage sh-4.4# chroot /mnt/sysimage bash-4.4# cat /etc/*-release CentOS Stream release 8 NAME=\"CentOS Stream\" VERSION=\"8\" ID=\"centos\" ID_LIKE=\"rhel fedora\" VERSION_ID=\"8\" PLATFORM_ID=\"platform:el8\" PRETTY_NAME=\"CentOS Stream 8\" ANSI_COLOR=\"0;31\" CPE_NAME=\"cpe:/o:centos:centos:8\" HOME_URL=\"https://centos.org/\" BUG_REPORT_URL=\"https://bugzilla.redhat.com/\" REDHAT_SUPPORT_PRODUCT=\"Red Hat Enterprise Linux 8\" REDHAT_SUPPORT_PRODUCT_VERSION=\"CentOS Stream\" CentOS Stream release 8 CentOS Stream release 8 bash-4.4# ","date":"2022-11-11","objectID":"/rescue-shell-you-dont-have-any-linux-partitions/:0:0","tags":["rescue","mount","chroot"],"title":"Rescue Shell - You Don't Have Any Linux Partitions","uri":"/rescue-shell-you-dont-have-any-linux-partitions/"},{"categories":["linux"],"content":"Reference 14.04 - mount unknown filesystem type ’lvm2_member’ - Ask Ubuntu ","date":"2022-11-11","objectID":"/rescue-shell-you-dont-have-any-linux-partitions/:1:0","tags":["rescue","mount","chroot"],"title":"Rescue Shell - You Don't Have Any Linux Partitions","uri":"/rescue-shell-you-dont-have-any-linux-partitions/"},{"categories":null,"content":"说明 收集于互联网，仅作归档用，方便查找 仅包含 IPv4，并对数据进行了去重 可用性自测 列表 142.250.4.90 translate.googleapis.com 172.253.114.90 translate.googleapis.com 172.217.203.90 translate.googleapis.com 172.253.112.90 translate.googleapis.com 142.250.9.90 translate.googleapis.com 172.253.116.90 translate.googleapis.com 142.250.97.90 translate.googleapis.com 142.250.30.90 translate.googleapis.com 142.250.111.90 translate.googleapis.com 172.217.215.90 translate.googleapis.com 142.250.11.90 translate.googleapis.com 142.251.9.90 translate.googleapis.com 108.177.122.90 translate.googleapis.com 142.250.96.90 translate.googleapis.com 142.250.100.90 translate.googleapis.com 142.250.110.90 translate.googleapis.com 172.217.214.90 translate.googleapis.com 172.217.222.90 translate.googleapis.com 142.250.31.90 translate.googleapis.com 142.250.126.90 translate.googleapis.com 142.250.10.90 translate.googleapis.com 172.217.195.90 translate.googleapis.com 172.253.115.90 translate.googleapis.com 142.251.5.90 translate.googleapis.com 142.250.136.90 translate.googleapis.com 142.250.12.90 translate.googleapis.com 142.250.101.90 translate.googleapis.com 172.217.192.90 translate.googleapis.com 142.250.0.90 translate.googleapis.com 142.250.107.90 translate.googleapis.com 172.217.204.90 translate.googleapis.com 142.250.28.90 translate.googleapis.com 142.250.125.90 translate.googleapis.com 172.253.124.90 translate.googleapis.com 142.250.8.90 translate.googleapis.com 142.250.128.90 translate.googleapis.com 142.250.112.90 translate.googleapis.com 142.250.27.90 translate.googleapis.com 142.250.105.90 translate.googleapis.com 172.253.126.90 translate.googleapis.com 172.253.123.90 translate.googleapis.com 172.253.122.90 translate.googleapis.com 172.253.62.90 translate.googleapis.com 142.250.98.90 translate.googleapis.com 142.250.185.238 translate.googleapis.com 142.251.116.101 translate.googleapis.com 216.58.214.14 translate.googleapis.com 142.250.189.206 translate.googleapis.com 216.58.209.174 translate.googleapis.com 142.250.203.142 translate.googleapis.com 142.250.218.14 translate.googleapis.com 142.251.10.138 translate.googleapis.com 142.251.40.174 translate.googleapis.com 142.250.185.174 translate.googleapis.com 172.217.16.46 translate.googleapis.com 172.217.0.46 translate.googleapis.com 172.217.31.142 translate.googleapis.com 216.58.220.142 translate.googleapis.com 172.217.13.142 translate.googleapis.com ","date":"2022-10-26","objectID":"/chrome-translate-server-ips/:0:0","tags":["chrome","hosts"],"title":"谷歌浏览器 Chrome 翻译服务器 IP 地址收集","uri":"/chrome-translate-server-ips/"},{"categories":["linux"],"content":"此问题目前在 H3C 部分机型有遇到，可能安装 Ubuntu 也会遇到这个问题 ","date":"2022-10-14","objectID":"/black-screen-on-debian-11-new-installation/:0:0","tags":["debian","grub","h3c"],"title":"Debian 11 新装系统开机黑屏","uri":"/black-screen-on-debian-11-new-installation/"},{"categories":["linux"],"content":"解决办法 两种方式任选一种均可 ","date":"2022-10-14","objectID":"/black-screen-on-debian-11-new-installation/:1:0","tags":["debian","grub","h3c"],"title":"Debian 11 新装系统开机黑屏","uri":"/black-screen-on-debian-11-new-installation/"},{"categories":["linux"],"content":"方式1：维护模式下修改 注意：如果在系统安装过程中未设置 root 密码，维护模式将无法进入！会提示 “Cannot open access to console, the root account is locked.” - “无法访问控制台，root 账户被锁定”。 重启系统，在启动菜单(GNU GRUB)界面选择 Advanced options for Debian GNU/Linux 然后选择 Debian GNU/Linux, with Linux 5.10.0-15-amd64 (recovery mode)，后面的内核版本号可能不同 在屏幕下方提示 Give root password for maintenance 后，输入 root 密码并回车进入维护模式的控制台界面 修改 GRUB 文件 使用编辑器打开 grub 文件 root@debian:~# nano /etc/default/grub 找到如下一行内容 GRUB_CMDLINE_LINUX_DEFAULT=\"quiet\" 并修改为 GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash nomodeset\" 按下组合键 Ctrl + O 并回车保存修改后的文件，按下组合键 Ctrl + X 退出编辑 返回到控制台界面后执行下列命令使修改生效 root@debian:~# export PATH=$PATH:/usr/sbin root@debian:~# update-grub 待执行完成后，重启机器即可 ","date":"2022-10-14","objectID":"/black-screen-on-debian-11-new-installation/:1:1","tags":["debian","grub","h3c"],"title":"Debian 11 新装系统开机黑屏","uri":"/black-screen-on-debian-11-new-installation/"},{"categories":["linux"],"content":"方式2：GRUB 处修改 重启系统，在启动菜单(GNU GRUB)界面光标移动到 Debian GNU/Linux 上并按下 e 键打开临时 GRUB 编辑界面 光标移动到 linux 开头的一行，按下 End 键跳转到行尾 添加 splash nomodeset 参数到行尾并按下组合键 Ctrl + X 以该参数临时启动到系统 修改后的截图，注意参数之间的空格 进入桌面后按下 Windows 徽标键打开软件列表菜单，输入 ter 或者找到 终端 并打开 输入命令 su 并输入 root 密码切换到 root 账号 后续步骤均同 方式 1 下的 第 3 步 ","date":"2022-10-14","objectID":"/black-screen-on-debian-11-new-installation/:1:2","tags":["debian","grub","h3c"],"title":"Debian 11 新装系统开机黑屏","uri":"/black-screen-on-debian-11-new-installation/"},{"categories":["linux"],"content":"参数说明 前面所修改的参数均为 Linux 内核参数，内核参数有几百项之多，此处仅说明本文用到的几个，完整参数列表见参考链接 quiet 禁止大多数日志消息 quiet [KNL] Disable most log messages splash 显示启动画面 This option is used to start an eye-candy “loading” screen while all the core parts of the system are loaded in the background. nomodeset 添加该参数指示内核在 X (server) 加载完成前不要加载显示(视频)驱动而是使用 BIOS 模式 Adding the nomodeset parameter instructs the kernel to not load video drivers and use BIOS modes instead until X is loaded. 根据描述，只有 nomodeset 是必须的，另外两个参数均可忽略 ，但尚未实机(H3C系列)测试 ","date":"2022-10-14","objectID":"/black-screen-on-debian-11-new-installation/:2:0","tags":["debian","grub","h3c"],"title":"Debian 11 新装系统开机黑屏","uri":"/black-screen-on-debian-11-new-installation/"},{"categories":["linux"],"content":"参考链接 手动设置用于 Linux 引导的“nomodeset”内核引导行选项 | Dell 中国 boot - Why do I need to replace “quiet splash” with “nomodeset”? - Ask Ubuntu kernel-parameters.txt - Github When starting debian(GNOME) I just get a black screen, what is the problem and what can I do to fix it? : debian (reddit.com) grub2 - How do I add a kernel boot parameter? - Ask Ubuntu ","date":"2022-10-14","objectID":"/black-screen-on-debian-11-new-installation/:3:0","tags":["debian","grub","h3c"],"title":"Debian 11 新装系统开机黑屏","uri":"/black-screen-on-debian-11-new-installation/"},{"categories":["server"],"content":"起因 H3C R2900 G3 安装 EXSi 6 时，因为没有集成网卡驱动而不能继续，而后在网上看了下，解决办法是向镜像添加驱动。 ","date":"2022-10-14","objectID":"/esxi-customizer-ps/:1:0","tags":["h3c","esxi"],"title":"Esxi Customizer Ps","uri":"/esxi-customizer-ps/"},{"categories":["server"],"content":"过程 准备 如果是 Windows 7 系统，需要安装 Windows Management Framework 3.0 为了脚本能顺利运行，需要解除执行 ps1 脚本限制 PS C:\\Users\\Administrator\u003e Set-ExecutionPolicy Unrestricted 执行策略更改 执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略? [Y] 是(Y) [A] 全是(A) [N] 否(N) [L] 全否(L) [S] 暂停(S) [?] 帮助 (默认值为“N”): A 从 ESXi-Customizer-PS Github release 下载解压得到 ESXi-Customizer-PS.ps1 从 官方链接1 / 官方链接2 下载并安装 VMware PowerCLI 6.5 Release 1 从硬件官网下载并解压驱动到文件夹，此处假定存放目录为 NIC-Driver 打开 Powershell 切换到脚本所在目录，开始创建镜像 PS C:\\Users\\Administrator\u003e .\\ESXi-Customizer-PS.ps1 -nsc -v67 -vft -pkgDir .\\NIC-Driver 参数说明 -nsc: -NoSignatureCheck，跳过签名检查，开启此选项避免无签名驱动添加失败 -v67: 指定镜像版本，可选项：-v50, -v51, -v55, -v60, -v65, -v67, -v70 -vft: 连接到 V-Front 在线仓库。如不指定则连接到 VMware ESXi 软件仓库 -pkgDir \u003cdir\u003e[,...]: 指定驱动的目录 完整帮助使用 .\\ESXi-Customizer-PS.ps1 -help 查看 等待创建完成后，就可以将镜像写入 U 盘进行安装了。 ","date":"2022-10-14","objectID":"/esxi-customizer-ps/:2:0","tags":["h3c","esxi"],"title":"Esxi Customizer Ps","uri":"/esxi-customizer-ps/"},{"categories":["server"],"content":"参考 VMware ESXi添加第三方网卡驱动_风行無痕的博客-CSDN博客_esxi添加网卡驱动 - CSDN ","date":"2022-10-14","objectID":"/esxi-customizer-ps/:3:0","tags":["h3c","esxi"],"title":"Esxi Customizer Ps","uri":"/esxi-customizer-ps/"},{"categories":["nodejs"],"content":"安装 NodeJS root@ubuntu:~# adduser node root@ubuntu:~# su - node node@ubuntu:~$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash node@ubuntu:~$ nvm install 16.15.1 node@ubuntu:~$ which node /home/node/.nvm/versions/node/v16.15.1/bin/node node@ubuntu:~$ exit ","date":"2022-10-14","objectID":"/wikijs-deployment/:1:0","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["nodejs"],"content":"安装 PostgreSQL root@ubuntu:~# apt install postgresql postgresql-contrib root@ubuntu:~# systemctl start postgresql.service root@ubuntu:~# su - postgres postgres@ubuntu:~$ createuser --interactive Enter name of role to add: wikijs Shall the new role be a superuser? (y/n) n Shall the new role be allowed to create databases? (y/n) y Shall the new role be allowed to create more new roles? (y/n) n postgres@ubuntu:~$ psql psql (14.3 (Ubuntu 14.3-0ubuntu0.22.04.1)) Type \"help\" for help. postgres=# \\password wikijs Enter new password for user \"wikijs\": Enter it again: postgres=# CREATE DATABASE wikijs; postgres=# GRANT ALL PRIVILEGES ON DATABASE wikijs TO wikijs; postgres=# \\q postgres@ubuntu:~$ exit ","date":"2022-10-14","objectID":"/wikijs-deployment/:2:0","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["nodejs"],"content":"安装 Wiki.js ","date":"2022-10-14","objectID":"/wikijs-deployment/:3:0","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["nodejs"],"content":"下载源码 root@ubuntu:~# adduser wikijs root@ubuntu:~# usermod -aG node wikijs root@ubuntu:~# mkdir -p /var/www/wikijs root@ubuntu:~# chown wikijs:wikijs /var/www/wikijs root@ubuntu:~# su - wikijs wikijs@ubuntu:~$ cd /var/www/wikijs wikijs@ubuntu:/var/www/wikijs$ wget https://github.com/Requarks/wiki/releases/latest/download/wiki-js.tar.gz wikijs@ubuntu:/var/www/wikijs$ tar xzf wiki-js.tar.gz ","date":"2022-10-14","objectID":"/wikijs-deployment/:3:1","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["nodejs"],"content":"配置 Wiki.js wikijs@ubuntu:/var/www/wikijs$ cp config.sample.yml config.yml wikijs@ubuntu:/var/www/wikijs$ nano config.yml 根据实际情况修改配置文件 # PostgreSQL / MySQL / MariaDB / MS SQL Server only: host: localhost port: 5432 user: wikijs pass: wikijsrocks db: wikijs # IP address the server should listen to bindIP: 127.0.0.1 # Log Level logLevel: warn 完成后即可尝试前台启动服务 wikijs@ubuntu:/var/www/wikijs$ /home/node/.nvm/versions/node/v16.15.1/bin/node server/ ","date":"2022-10-14","objectID":"/wikijs-deployment/:3:2","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["nodejs"],"content":"创建后台服务 wikijs@ubuntu:/var/www/wikijs$ nano wikijs.service 粘贴下面内容 [Unit] Description=Knowledge Base'd on Wiki.js After=network.target [Service] Type=simple ExecStart=/home/node/.nvm/versions/node/v16.15.1/bin/node /var/www/wikijs/server/ Restart=always User=wikijs Environment=NODE_ENV=production WorkingDirectory=/var/www/wikijs [Install] WantedBy=multi-user.target 添加自启并启动 root@ubuntu:~# systemctl enable --now /var/www/wikijs/wikijs.service ","date":"2022-10-14","objectID":"/wikijs-deployment/:4:0","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["nodejs"],"content":"配置 Nginx root@ubuntu:~# nano /var/www/wikijs/nginx.conf 粘贴下列内容 server { listen 80; #listen [::]:80; server_name wiki.example.com; location / { return 301 https://$host$request_uri; } } server { listen 443 ssl http2; #listen [::]:443 ssl http2; server_name wiki.example.com; charset UTF-8; access_log /var/log/nginx/wikijs_access.log; error_log /var/log/nginx/wikijs_error.log; location / { proxy_pass http://127.0.0.1:3000; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } ssl_certificate /root/.acme.sh/wiki.example.com/wiki.example.com.cer; ssl_certificate_key /root/.acme.sh/wiki.example.com/wiki.example.com.key; } 使用 nginx -t 测试无误后链接到 nginx 配置目录下 root@ubuntu:~# ln -s /var/www/wikijs/nginx.conf /etc/nginx/sites-enabled/wikijs.conf root@ubuntu:~# nginx -s reload 完成后打开浏览器进行站点配置 ","date":"2022-10-14","objectID":"/wikijs-deployment/:5:0","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["nodejs"],"content":"中文分词 root@ubuntu:~# apt install --no-install-recommends gcc make libc6-dev bzip2 apt-transport-https ca-certificates root@ubuntu:~# apt install postgresql-server-dev-all root@ubuntu:~# curl -sSkLf http://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2 | tar xjf - root@ubuntu:~# curl -sSkLf https://github.com/amutu/zhparser/archive/master.tar.gz | tar xzf - root@ubuntu:~# cd scws-1.2.3 \u0026\u0026 ./configure \u0026\u0026 make -j$(nproc) install V=0 \u0026\u0026 cd .. root@ubuntu:~# cd zhparser-master \u0026\u0026 make -j$(nproc) install \u0026\u0026 cd .. root@ubuntu:~# apt-get purge -y postgresql-server-dev-all root@ubuntu:~# apt-get autoremove --purge -y root@ubuntu:~# rm -rf zhparser-master scws-1.2.3 root@ubuntu:~# su - postgres -c psql postgres=# ALTER USER wikijs WITH SUPERUSER; postgres=# \\q root@ubuntu:~# su - wikijs -c psql wikijs=\u003e CREATE EXTENSION pg_trgm; wikijs=\u003e CREATE EXTENSION zhparser; wikijs=\u003e CREATE TEXT SEARCH CONFIGURATION pg_catalog.chinese_zh (PARSER = zhparser); wikijs=\u003e ALTER TEXT SEARCH CONFIGURATION chinese_zh ADD MAPPING FOR n,v,a,i,e,l WITH simple; wikijs=\u003e ALTER ROLE wikijs SET zhparser.punctuation_ignore = ON; wikijs=\u003e ALTER ROLE wikijs SET zhparser.multi_short = ON; wikijs=\u003e \\q root@ubuntu:~# su - postgres -c psql postgres=# ALTER USER wikijs WITH NOSUPERUSER; postgres=# \\q 编辑 definition.yml 文件 root@ubuntu:~# nano /var/www/wikijs/server/modules/search/postgres/definition.yml 在 enum 下添加 - chinese_zh enum: ... - turkish - chinese_zh 修改 wiki_db 中的表 searchEngines，将 dictLanguage 的值改为 chinese_zh root@ubuntu:~# su - wikijs -c psql UPDATE \"public\".\"searchEngines\" SET \"isEnabled\"='true', \"config\"='{\"dictLanguage\":\"chinese_zh\"}' WHERE \"key\"='postgres'; ","date":"2022-10-14","objectID":"/wikijs-deployment/:6:0","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["nodejs"],"content":"QA 启动报错 error: Package subpath './public/extractFiles' is not defined by \"exports\" in /var/www/wikijs/node_modules/extract-files/package.json A: 使用低版本的 NodeJS，如本例中的 16.15.1，参见 error: Package subpath ‘./public/extractFiles’ is not defined by “exports” in /home/bot/wiki/node_modules/extract-files/package.json · Discussion #5113 · requarks/wiki ","date":"2022-10-14","objectID":"/wikijs-deployment/:7:0","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["nodejs"],"content":"参考 Linux | Wiki.js Install Wiki.js with Node.js, PostgreSQL, and Nginx on Ubuntu 20.04 LTS - Vultr.com How To Install PostgreSQL on Ubuntu 20.04 [Quickstart] | DigitalOcean wiki.js 使用 postgres 支持中文全文检索 - 知乎 abcfy2/docker_zhparser: A source repo of Postgres Chinese full-test search docker image, based on zhparser. - Github ","date":"2022-10-14","objectID":"/wikijs-deployment/:8:0","tags":["wiki.js","zhparser"],"title":"Wiki.js 本地部署","uri":"/wikijs-deployment/"},{"categories":["software"],"content":"解决办法 ","date":"2022-10-14","objectID":"/zerotier-waiting-for-system-service/:1:0","tags":["windows","zerotier"],"title":"解决 Waiting for ZeroTier system service 一直等待的问题","uri":"/zerotier-waiting-for-system-service/"},{"categories":["software"],"content":"方法一 仅供参考 创建路径为 C:\\ProgramData\\ZeroTier\\One\\local.conf 内容为 {} 的文件并重启 ZeroTierOneService 服务 需要验证此处仅创建空文件是否能解决该问题 ","date":"2022-10-14","objectID":"/zerotier-waiting-for-system-service/:1:1","tags":["windows","zerotier"],"title":"解决 Waiting for ZeroTier system service 一直等待的问题","uri":"/zerotier-waiting-for-system-service/"},{"categories":["software"],"content":"方法二 此方法仍然需要验证，仅作为猜想供参考 创建路径为 C:\\ProgramData\\ZeroTier\\One\\zerotier-one.port 内容为 9993 的文件并重启 ZeroTierOneService 服务，其中 9993 也可以为其它任意未被使用的端口号 ","date":"2022-10-14","objectID":"/zerotier-waiting-for-system-service/:1:2","tags":["windows","zerotier"],"title":"解决 Waiting for ZeroTier system service 一直等待的问题","uri":"/zerotier-waiting-for-system-service/"},{"categories":["software"],"content":"问题详情 Windows 11 干净系统新装 ZeroTier 1.10.1 完成后通知区域右键一直提示 Waiting for ZeroTier system service... 按照此处说明尝试无效，猜测配置文件问题 C:\\Program Files (x86)\\ZeroTier\\One\u003ezerotier-cli join 123456789abcdef0 C:\\ProgramData\\ZeroTier\\One\\zerotier-one_x64.exe: missing port and zerotier-one.port not found in C:\\ProgramData\\ZeroTier\\One 根据此处文档打开 C:\\ProgramData\\ZeroTier\\One 目录，并未找到文中提到的配置文件 local.conf 依照方法一所述操作后，问题解决 其实在尝试加入网络时的错误提示上就已经指明了 zerotier-one.port 未找到，但是我没仔细看也没反应过来那是一个文件。在创建 local.conf 时虽然没有端口相关参数，但是重启时软件能正常读取配置文件便会自动使用默认端口运行 ","date":"2022-10-14","objectID":"/zerotier-waiting-for-system-service/:2:0","tags":["windows","zerotier"],"title":"解决 Waiting for ZeroTier system service 一直等待的问题","uri":"/zerotier-waiting-for-system-service/"},{"categories":["software"],"content":"此代码是根据网上的 keygen.exe 文件反编译转换而来的。因为原 exe 也仅有 3KB 大小，就尝试着拿来研究了一下，结果还是花了两三天才完成。 ","date":"2022-10-14","objectID":"/wiztree-4_08-keygen-py/:0:0","tags":["python","keygen"],"title":"WizTree V4.08 Python KeyGen","uri":"/wiztree-4_08-keygen-py/"},{"categories":["software"],"content":"简要说明 WizTree 所有功能针对个人都是免费的，商用请联系官方购买正版 激活码仅移除捐赠按钮和捐赠消息，具体区别见官方说明 此代码和原 exe 均有可能会生成过期无效的激活码，生成 100% 有效的激活码不在本文的研究范围 使用激活码需要断网或阻止应用程序联网，否则会激活失败 使用 Python在线运行工具 可以直接在线生成激活码，无需 Python 环境 ","date":"2022-10-14","objectID":"/wiztree-4_08-keygen-py/:1:0","tags":["python","keygen"],"title":"WizTree V4.08 Python KeyGen","uri":"/wiztree-4_08-keygen-py/"},{"categories":["software"],"content":"Python 代码 from random import randint rn = [randint(0, 255) for _ in range(14)] rn[1] = 0xE7 rn[5] = 0x03 arg2 = [0xc, 6] arg3 = [3, 0xf3] for i in range(2): a1 = 0 for j in range(4): a1 \u003c\u003c= 8 a1 += rn[i * 4 + j] rn[9+3*i] = ((a1 \u003e\u003e arg2[i]) \u0026 0xff) ^ ((a1 \u0026 0xff) | arg3[i]) rs = '' for i in range(14): rs += f'{rn[i]:02X}' if i % 2: rs += '-' cx = 0x42 dx = 0xBE for s in rs: if s != '-': dx += ord(s) if dx \u003e 0xFF: dx -= 0xFF cx += dx if cx \u003e 0xFF: cx -= 0xFF rs += f'{cx:02X}{dx:02X}' print(rs) ","date":"2022-10-14","objectID":"/wiztree-4_08-keygen-py/:2:0","tags":["python","keygen"],"title":"WizTree V4.08 Python KeyGen","uri":"/wiztree-4_08-keygen-py/"},{"categories":["software"],"content":"KeyGen.exe Base64 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","date":"2022-10-14","objectID":"/wiztree-4_08-keygen-py/:3:0","tags":["python","keygen"],"title":"WizTree V4.08 Python KeyGen","uri":"/wiztree-4_08-keygen-py/"},{"categories":["storage"],"content":"微软文档中，结构体 DRIVE_LAYOUT_INFORMATION_EX 的定义如下 typedef struct _DRIVE_LAYOUT_INFORMATION_EX { DWORD PartitionStyle; DWORD PartitionCount; union { DRIVE_LAYOUT_INFORMATION_MBR Mbr; DRIVE_LAYOUT_INFORMATION_GPT Gpt; } DUMMYUNIONNAME; PARTITION_INFORMATION_EX PartitionEntry[1]; } DRIVE_LAYOUT_INFORMATION_EX, *PDRIVE_LAYOUT_INFORMATION_EX; 字段 PartitionCount 的描述为： The number of partitions on the drive. On hard disks with the MBR layout, this value will always be a multiple of 4. Any partitions that are actually unused will have a partition type of PARTITION_ENTRY_UNUSED (0) set in the PartitionType member of the PARTITION_INFORMATION_MBR structure of the Mbr member of the PARTITION_INFORMATION_EX structure of the PartitionEntry member of this structure. 简单翻译如下：硬盘上的分区数量。在 MBR 形式的硬盘上，这个值始终为 4 的倍数。未使用的分区的分区类型为 PARTITION_ENTRY_UNUSED(其值为 0)，这个值存储在当前结构体下的 PARTITION_INFORMATION_EX 结构体成员 PartitionEntry 中 PARTITION_INFORMATION_MBR 结构体成员 Mbr 的 PartitionType 成员中。其完整调用形式如下所示 layout.PartitionEntry[index].Mbr.PartitionType PartitionType 的对照表见参考链接 2 此处便引出了一个问题，PartitionCount 的值始终为 4 的倍数应该怎么理解？ 首先说一下我的结论： $PartitionCount=4+Extended*4+(Logical-1)*4$ MBR 限制最多只能有 4 个主分区（Primary）或者 3 个主分区加 1 个扩展分区（Extended），当需要更多分区时就必须在扩展分区下创建逻辑分区（Logical），每个逻辑分区都有一个和MBR结构类似的扩展引导记录（EBR）。 主分区数量 扩展分区数量 逻辑分区数量 PartitionCount 1 0 0 4 4 0 0 4 1 1 0 8 3 1 0 8 1 1 1 8 1 1 5 24 上表便很好地说明了 PartitionCount 的含义。因此，当磁盘为 MBR 格式时，通过该参数能简单地辨别磁盘上是否有扩展分区。 ","date":"2022-10-14","objectID":"/mbr-partitioncount-in-drive_layout_information_ex/:0:0","tags":["windows","mbr","winioctl"],"title":"DRIVE_LAYOUT_INFORMATION_EX 中的 PartitionCount 分区数量","uri":"/mbr-partitioncount-in-drive_layout_information_ex/"},{"categories":["storage"],"content":"参考链接 【Linux】MBR磁盘分区表只能有四个分区？_remo0x的博客-CSDN博客_mbr为什么只能建四个主分区 List of partition identifiers for PCs ","date":"2022-10-14","objectID":"/mbr-partitioncount-in-drive_layout_information_ex/:1:0","tags":["windows","mbr","winioctl"],"title":"DRIVE_LAYOUT_INFORMATION_EX 中的 PartitionCount 分区数量","uri":"/mbr-partitioncount-in-drive_layout_information_ex/"},{"categories":null,"content":"使用主题：LoveIt 搭建参考：Theme Documentation - Basics git clone https://github.com/xja/xja.github.io hugo new site xja.github.io --force cd xja.github.io git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt hugo new posts/first_post.zh-cn.md git add . git commit -m \"First post\" git push ","date":"2022-10-13","objectID":"/first_post/:0:0","tags":null,"title":"First_post","uri":"/first_post/"}]